library 'buzz-shared-library@master'
def mavenPodYaml = libraryResource 'podtemplates/maven-pod.yaml'
def kanikoPodYaml = libraryResource 'podtemplates/kaniko-pod.yaml'
def helmKubectlYaml = libraryResource 'podtemplates/helm-kubectl-pod.yaml'
pipeline {
  agent none
  options { 
    buildDiscarder(logRotator(numToKeepStr: '5'))
    skipDefaultCheckout true
  }
  
  stages {
        stage('Acquiring pod') {
	        agent {
            kubernetes {
                label 'maven'
                yaml mavenPodYaml
                }
            }	
            stages{
            stage('Maven build'){
            steps {
              container('maven') {
                checkout scm
                sh 'mvn -B -DskipTests clean package'
                stash includes: 'target/*.jar', name: 'location'
		            stash includes: 'Dockerfile', name: 'Dockerfile'
		            script{
		              version = sh(returnStdout: true, script: "mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate \
                  -Dexpression=project.version -q -DforceStdout")
 		            }
		            echo "App Version: ${version}"
              }
	          }
            }
        
        stage('Test') { 
            steps {
              container('maven') {
                checkout scm
                sh 'mvn test'
              }
             script{
                   commitHash = sh(returnStdout: true, script: "git rev-parse HEAD | cut -c1-7 | tr -d '\n'")
                 }
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml' 
                }
            }
        }
            }
        }
  
        stage('Build Docker Image') {
         agent {
            kubernetes {
                label 'kaniko'
                yaml kanikoPodYaml
                }
            }
            steps {
              container(name: 'kaniko', shell: '/busybox/sh') {
                unstash 'location'
                unstash 'Dockerfile'
                withEnv(['PATH+EXTRA=/busybox:/kaniko']) {
            	sh """#!/busybox/sh
            	executor -f ${pwd()}/Dockerfile -c ${pwd()} -d gcr.io/na-csa-msuarez/${applicationName}:${BUILD_NUMBER} \
              -d gcr.io/na-csa-msuarez/${applicationName}:${version}-${commitHash} \
              -d gcr.io/na-csa-msuarez/${applicationName}:latest
                """
                   }
              }
            }
        }
        stage('Helm install') {
         agent {
            kubernetes {
                label 'helm-kubectl'
                yaml helmKubectlYaml
                }
            }
            steps {
                checkout scm
              container('helm-kubectl') {
		            sh "helm lint chart/${applicationName}"
                sh "helm package --app-version ${version} --debug --save=false chart/${applicationName}"
		            script{
		              chart_tgz = sh(returnStdout: true, script: "find . -name *.tgz | tr -d '\n'")
 		            }		            
                sh """curl -L --data-binary "@${chart_tgz}" http://34.67.152.26:8080/api/charts"""
		            sh "helm init --client-only"
		            sh "helm repo add chartmuseum http://34.67.152.26:8080"
                sh "helm upgrade ${applicationName} chartmuseum/${applicationName} \
                -i --namespace cje \
                --set image.tag=${version}-${commitHash}"
                publishEvent simpleEvent("${applicationName}:${version}")

                   }
              }
            }
            stage('Helm install -2 ') {
                helmDeploy("${applicatioName}","${commitHash}",$"${version}")
            }

        
    }
}
